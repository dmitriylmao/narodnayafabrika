
'use client';

import React, { useState } from 'react';
import { db } from '@/firebase/config';
import { collection, addDoc, serverTimestamp } from 'firebase/firestore';
import styles from './NewsForm.module.css';
import NewsTable from './NewsTable'; 

const createSlug = (title) => {
    return title
        .toLowerCase()
        .trim()
        .replace(/[^\w\s-]/g, '') 
        .replace(/[\s_-]+/g, '-') 
        .replace(/^-+|-+$/g, ''); 
};

export default function NewsForm() {
    const [title, setTitle] = useState('');
    const [imageUrl, setImageUrl] = useState('');
    const [content, setContent] = useState('');
    const [loading, setLoading] = useState(false);
    const [message, setMessage] = useState('');
    const [isError, setIsError] = useState(false);
    
    const [tableRefreshKey, setTableRefreshKey] = useState(0); 

    const handleSubmit = async (e) => {
        e.preventDefault();
        setLoading(true);
        setMessage('');
        setIsError(false);

        const slug = createSlug(title);

        try {
            const newsData = {
                title,
                slug,
                imageUrl,
                content,
                createdAt: serverTimestamp(),
            };

            await addDoc(collection(db, 'news'), newsData);

            setMessage('–ù–æ–≤–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
            setIsError(false);
            
            setTitle('');
            setImageUrl('');
            setContent('');
            
            setTableRefreshKey(prevKey => prevKey + 1);

        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏:", error);
            setMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å.');
            setIsError(true);
        } finally {
            setLoading(false);
        }
    };

    return (
        <form onSubmit={handleSubmit} className={styles.form}>
            <h2 className={styles.formTitle}>–î–æ–±–∞–≤–∏—Ç—å –ù–æ–≤—É—é –ù–æ–≤–æ—Å—Ç—å</h2>

            {message && (
                <div className={`${styles.message} ${isError ? styles.error : styles.success}`}>
                    {message}
                </div>
            )}

            <label className={styles.label}>–ó–∞–≥–æ–ª–æ–≤–æ–∫ (Title)</label>
            <input
                type="text"
                value={title}
                onChange={(e) => setTitle(e.target.value)}
                className={styles.input}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö—Ä—É–ø–Ω—ã–π –∑–∞–∫–∞–∑ –æ—Ç –∑–∞—Ä—É–±–µ–∂–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤"
                required
            />

            <label className={styles.label}>URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞)</label>
            <input
                type="url"
                value={imageUrl}
                onChange={(e) => setImageUrl(e.target.value)}
                className={styles.input}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: https://i.imgur.com/image.jpg"
                required
            />
            
            <div className={styles.instructionBox}>
                <p className={styles.instructionTitle}>
                    üí° –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å URL –∫–∞—Ä—Ç–∏–Ω–∫–∏:
                </p>
                <ol className={styles.instructionList}>
                    <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ö–æ—Å—Ç–∏–Ω–≥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, **PostImage** –∏–ª–∏ **Imgur**).</li>
                    <li>**–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ: –û—Ç–∫—Ä–æ–π—Ç–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ –±—Ä–∞—É–∑–µ—Ä–∞.**</li>
                    <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏. **–°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: .jpg, .png –∏ —Ç.–¥.**</li>
                </ol>
                <p className={styles.instructionTip}>
                    *–°—Å—ã–ª–∫–∏ –Ω–∞ Google Drive –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –ø—Ä—è–º—ã–µ URL.*
                </p>
            </div>

            <label className={styles.label}>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ (Content)</label>
            <textarea
                value={content}
                onChange={(e) => setContent(e.target.value)}
                className={`${styles.input} ${styles.textarea}`}
                placeholder="–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ . . ."
                rows="10"
                required
            />

            <button type="submit" className={styles.submitButton} disabled={loading}>
                {loading ? '–î–æ–±–∞–≤–ª—è–µ–º...' : '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ù–æ–≤–æ—Å—Ç—å'}
            </button>
            
            <NewsTable key={tableRefreshKey} /> 
            
        </form>
    );
}